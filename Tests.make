# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_32bit
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug_32bit)
  RESCOMP = windres
  TARGETDIR = bin/Debug_32bit-linux-x86/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Debug_32bit-linux-x86/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s-d -lsfml-audio-s-d -lsfml-window-s-d -lsfml-system-s-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-32bit -Lvendor/glew-2.1.0/lib/32bit -L/usr/lib32 -m32
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_32bit)
  RESCOMP = windres
  TARGETDIR = bin/Release_32bit-linux-x86/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Release_32bit-linux-x86/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-32bit -Lvendor/glew-2.1.0/lib/32bit -L/usr/lib32 -m32 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),distribution_32bit)
  RESCOMP = windres
  TARGETDIR = bin/Distribution_32bit-linux-x86/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Distribution_32bit-linux-x86/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC -DPH_DISTRIBUTION
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-32bit -Lvendor/glew-2.1.0/lib/32bit -L/usr/lib32 -m32 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),profiling_32bit)
  RESCOMP = windres
  TARGETDIR = bin/Profiling_32bit-linux-x86/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Profiling_32bit-linux-x86/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC -DPH_PROFILING
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-32bit -Lvendor/glew-2.1.0/lib/32bit -L/usr/lib32 -m32 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),tests_32bit)
  RESCOMP = windres
  TARGETDIR = bin/Tests_32bit-linux-x86/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Tests_32bit-linux-x86/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC -DPH_TESTS
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s-d -lsfml-audio-s-d -lsfml-window-s-d -lsfml-system-s-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-32bit -Lvendor/glew-2.1.0/lib/32bit -L/usr/lib32 -m32
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),debug_64bit)
  RESCOMP = windres
  TARGETDIR = bin/Debug_64bit-linux-x86_64/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Debug_64bit-linux-x86_64/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s-d -lsfml-audio-s-d -lsfml-window-s-d -lsfml-system-s-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-64bit -Lvendor/glew-2.1.0/lib/64bit -L/usr/lib64 -m64
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_64bit)
  RESCOMP = windres
  TARGETDIR = bin/Release_64bit-linux-x86_64/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Release_64bit-linux-x86_64/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-64bit -Lvendor/glew-2.1.0/lib/64bit -L/usr/lib64 -m64 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),distribution_64bit)
  RESCOMP = windres
  TARGETDIR = bin/Distribution_64bit-linux-x86_64/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Distribution_64bit-linux-x86_64/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC -DPH_DISTRIBUTION
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-64bit -Lvendor/glew-2.1.0/lib/64bit -L/usr/lib64 -m64 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),profiling_64bit)
  RESCOMP = windres
  TARGETDIR = bin/Profiling_64bit-linux-x86_64/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Profiling_64bit-linux-x86_64/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC -DPH_PROFILING
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s -lsfml-audio-s -lsfml-window-s -lsfml-system-s
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-64bit -Lvendor/glew-2.1.0/lib/64bit -L/usr/lib64 -m64 -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),tests_64bit)
  RESCOMP = windres
  TARGETDIR = bin/Tests_64bit-linux-x86_64/Tests
  TARGET = $(TARGETDIR)/Tests
  OBJDIR = bin-obj/Tests_64bit-linux-x86_64/Tests
  PCH = src/pch.hpp
  GCH = $(OBJDIR)/$(notdir $(PCH)).gch
  DEFINES += -DSFML_STATIC -DGLEW_STATIC -DPH_TESTS
  INCLUDES += -Isrc -Ivendor/SFML_2.5.1/include -Ivendor/glew-2.1.0/include -Ivendor/stb -Ivendor/entt-3.2.0/src -Ivendor/catch2
  FORCE_INCLUDE += -include $(OBJDIR)/$(notdir $(PCH))
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wno-4996
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17 -Wno-4996
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lopengl32.lib -lwinmm.lib -lgdi32.lib -lfreetype.lib -lflac.lib -lvorbisenc.lib -lvorbisfile.lib -lvorbis.lib -logg.lib -lopenal32.lib -lglew32s.lib -lsfml-graphics-s-d -lsfml-audio-s-d -lsfml-window-s-d -lsfml-system-s-d
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Lvendor/SFML_2.5.1/lib-VisualStudio-64bit -Lvendor/glew-2.1.0/lib/64bit -L/usr/lib64 -m64
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/aStarAlgorithm.o \
	$(OBJDIR)/aiManager.o \
	$(OBJDIR)/nodesGrid.o \
	$(OBJDIR)/obstacleGrid.o \
	$(OBJDIR)/randomPathAlgorithm.o \
	$(OBJDIR)/musicPlayer.o \
	$(OBJDIR)/soundPlayer.o \
	$(OBJDIR)/xmlAudioParser.o \
	$(OBJDIR)/animationSystem.o \
	$(OBJDIR)/audioSystem.o \
	$(OBJDIR)/damageAndDeath.o \
	$(OBJDIR)/debugCameraSystem.o \
	$(OBJDIR)/debugVisualization.o \
	$(OBJDIR)/entitiesDebuggerGENERATED.o \
	$(OBJDIR)/entityDestroying.o \
	$(OBJDIR)/gameplayUI.o \
	$(OBJDIR)/gates.o \
	$(OBJDIR)/gunAttacks.o \
	$(OBJDIR)/gunPositioningAndTexture.o \
	$(OBJDIR)/hintAreas.o \
	$(OBJDIR)/hostileCollisions.o \
	$(OBJDIR)/indoorOutdoorBlending.o \
	$(OBJDIR)/kinematicCollisions.o \
	$(OBJDIR)/levers.o \
	$(OBJDIR)/lifetimeSystem.o \
	$(OBJDIR)/meleeAttacks.o \
	$(OBJDIR)/movement.o \
	$(OBJDIR)/particleSystem.o \
	$(OBJDIR)/pickupSystem.o \
	$(OBJDIR)/pits.o \
	$(OBJDIR)/platforms.o \
	$(OBJDIR)/playerCameraMovement.o \
	$(OBJDIR)/playerMovementInput.o \
	$(OBJDIR)/pressurePlates.o \
	$(OBJDIR)/pushingAreas.o \
	$(OBJDIR)/puzzleBoulders.o \
	$(OBJDIR)/puzzles.o \
	$(OBJDIR)/renderSystem.o \
	$(OBJDIR)/savePoints.o \
	$(OBJDIR)/simRegion.o \
	$(OBJDIR)/slowZombieSystem.o \
	$(OBJDIR)/spikesSystem.o \
	$(OBJDIR)/staticCollisions.o \
	$(OBJDIR)/teleport.o \
	$(OBJDIR)/velocityChangingAreas.o \
	$(OBJDIR)/weatherSystem.o \
	$(OBJDIR)/zombieSystem.o \
	$(OBJDIR)/entitiesParser.o \
	$(OBJDIR)/entitiesTemplateStorage.o \
	$(OBJDIR)/entityUtil.o \
	$(OBJDIR)/systemsQueue.o \
	$(OBJDIR)/tiledParser.o \
	$(OBJDIR)/xmlMapParser.o \
	$(OBJDIR)/gui.o \
	$(OBJDIR)/interface.o \
	$(OBJDIR)/sliderWidget.o \
	$(OBJDIR)/textWidget.o \
	$(OBJDIR)/widget.o \
	$(OBJDIR)/xmlGuiParser.o \
	$(OBJDIR)/WindowsDebugApi.o \
	$(OBJDIR)/consoleHandler.o \
	$(OBJDIR)/fileHandler.o \
	$(OBJDIR)/terminalHandler.o \
	$(OBJDIR)/criticalError.o \
	$(OBJDIR)/handler.o \
	$(OBJDIR)/logRecord.o \
	$(OBJDIR)/logger.o \
	$(OBJDIR)/logsInitializing.o \
	$(OBJDIR)/font.o \
	$(OBJDIR)/framebuffer.o \
	$(OBJDIR)/openglErrors.o \
	$(OBJDIR)/shader.o \
	$(OBJDIR)/texture.o \
	$(OBJDIR)/lightRenderer.o \
	$(OBJDIR)/lineRenderer.o \
	$(OBJDIR)/pointRenderer.o \
	$(OBJDIR)/quadRenderer.o \
	$(OBJDIR)/textRenderer.o \
	$(OBJDIR)/embeddedShaders.o \
	$(OBJDIR)/renderer.o \
	$(OBJDIR)/animationStatesResources.o \
	$(OBJDIR)/soundBufferHolder.o \
	$(OBJDIR)/textureHolder.o \
	$(OBJDIR)/save.o \
	$(OBJDIR)/scene.o \
	$(OBJDIR)/sceneManager.o \
	$(OBJDIR)/sceneParser.o \
	$(OBJDIR)/terminal.o \
	$(OBJDIR)/csv.o \
	$(OBJDIR)/filePath.o \
	$(OBJDIR)/messageBox.o \
	$(OBJDIR)/profiling.o \
	$(OBJDIR)/random.o \
	$(OBJDIR)/threadId.o \
	$(OBJDIR)/threadPool.o \
	$(OBJDIR)/xml.o \
	$(OBJDIR)/dearImGui.o \
	$(OBJDIR)/game.o \
	$(OBJDIR)/pch.o \
	$(OBJDIR)/testAStarAlgorithm.o \
	$(OBJDIR)/testObstacleGrid.o \
	$(OBJDIR)/testRandomPathAlgorithm.o \
	$(OBJDIR)/testSoundPlayer.o \
	$(OBJDIR)/testSpatializationManager.o \
	$(OBJDIR)/testHandler.o \
	$(OBJDIR)/testLogger.o \
	$(OBJDIR)/bufferedHandler.o \
	$(OBJDIR)/testMath.o \
	$(OBJDIR)/testPath.o \
	$(OBJDIR)/testRandom.o \
	$(OBJDIR)/testRect.o \
	$(OBJDIR)/testXml.o \
	$(OBJDIR)/main.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking Tests
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Tests
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/aStarAlgorithm.o: src/AI/aStarAlgorithm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/aiManager.o: src/AI/aiManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/nodesGrid.o: src/AI/nodesGrid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/obstacleGrid.o: src/AI/obstacleGrid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/randomPathAlgorithm.o: src/AI/randomPathAlgorithm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/musicPlayer.o: src/Audio/musicPlayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soundPlayer.o: src/Audio/soundPlayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xmlAudioParser.o: src/Audio/xmlAudioParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/animationSystem.o: src/ECS/Systems/animationSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/audioSystem.o: src/ECS/Systems/audioSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/damageAndDeath.o: src/ECS/Systems/damageAndDeath.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/debugCameraSystem.o: src/ECS/Systems/debugCameraSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/debugVisualization.o: src/ECS/Systems/debugVisualization.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entitiesDebuggerGENERATED.o: src/ECS/Systems/entitiesDebuggerGENERATED.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entityDestroying.o: src/ECS/Systems/entityDestroying.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gameplayUI.o: src/ECS/Systems/gameplayUI.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gates.o: src/ECS/Systems/gates.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gunAttacks.o: src/ECS/Systems/gunAttacks.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gunPositioningAndTexture.o: src/ECS/Systems/gunPositioningAndTexture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hintAreas.o: src/ECS/Systems/hintAreas.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hostileCollisions.o: src/ECS/Systems/hostileCollisions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/indoorOutdoorBlending.o: src/ECS/Systems/indoorOutdoorBlending.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/kinematicCollisions.o: src/ECS/Systems/kinematicCollisions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/levers.o: src/ECS/Systems/levers.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lifetimeSystem.o: src/ECS/Systems/lifetimeSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/meleeAttacks.o: src/ECS/Systems/meleeAttacks.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/movement.o: src/ECS/Systems/movement.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/particleSystem.o: src/ECS/Systems/particleSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pickupSystem.o: src/ECS/Systems/pickupSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pits.o: src/ECS/Systems/pits.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/platforms.o: src/ECS/Systems/platforms.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/playerCameraMovement.o: src/ECS/Systems/playerCameraMovement.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/playerMovementInput.o: src/ECS/Systems/playerMovementInput.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pressurePlates.o: src/ECS/Systems/pressurePlates.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pushingAreas.o: src/ECS/Systems/pushingAreas.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/puzzleBoulders.o: src/ECS/Systems/puzzleBoulders.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/puzzles.o: src/ECS/Systems/puzzles.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/renderSystem.o: src/ECS/Systems/renderSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/savePoints.o: src/ECS/Systems/savePoints.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/simRegion.o: src/ECS/Systems/simRegion.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/slowZombieSystem.o: src/ECS/Systems/slowZombieSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spikesSystem.o: src/ECS/Systems/spikesSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/staticCollisions.o: src/ECS/Systems/staticCollisions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/teleport.o: src/ECS/Systems/teleport.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/velocityChangingAreas.o: src/ECS/Systems/velocityChangingAreas.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/weatherSystem.o: src/ECS/Systems/weatherSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/zombieSystem.o: src/ECS/Systems/zombieSystem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entitiesParser.o: src/ECS/entitiesParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entitiesTemplateStorage.o: src/ECS/entitiesTemplateStorage.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entityUtil.o: src/ECS/entityUtil.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/systemsQueue.o: src/ECS/systemsQueue.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tiledParser.o: src/ECS/tiledParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xmlMapParser.o: src/ECS/xmlMapParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gui.o: src/GUI/gui.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/interface.o: src/GUI/interface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sliderWidget.o: src/GUI/sliderWidget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/textWidget.o: src/GUI/textWidget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/widget.o: src/GUI/widget.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xmlGuiParser.o: src/GUI/xmlGuiParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowsDebugApi.o: src/Logs/ConcreteHandlers/WindowsDebugApi.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/consoleHandler.o: src/Logs/ConcreteHandlers/consoleHandler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fileHandler.o: src/Logs/ConcreteHandlers/fileHandler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/terminalHandler.o: src/Logs/ConcreteHandlers/terminalHandler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/criticalError.o: src/Logs/criticalError.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/handler.o: src/Logs/handler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/logRecord.o: src/Logs/logRecord.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/logger.o: src/Logs/logger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/logsInitializing.o: src/Logs/logsInitializing.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/font.o: src/Renderer/API/font.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/framebuffer.o: src/Renderer/API/framebuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/openglErrors.o: src/Renderer/API/openglErrors.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shader.o: src/Renderer/API/shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/texture.o: src/Renderer/API/texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lightRenderer.o: src/Renderer/MinorRenderers/lightRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lineRenderer.o: src/Renderer/MinorRenderers/lineRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pointRenderer.o: src/Renderer/MinorRenderers/pointRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/quadRenderer.o: src/Renderer/MinorRenderers/quadRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/textRenderer.o: src/Renderer/MinorRenderers/textRenderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/embeddedShaders.o: src/Renderer/Shaders/embeddedShaders.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/renderer.o: src/Renderer/renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/animationStatesResources.o: src/Resources/animationStatesResources.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soundBufferHolder.o: src/Resources/soundBufferHolder.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/textureHolder.o: src/Resources/textureHolder.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/save.o: src/Scenes/save.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scene.o: src/Scenes/scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sceneManager.o: src/Scenes/sceneManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sceneParser.o: src/Scenes/sceneParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/terminal.o: src/Terminal/terminal.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/csv.o: src/Utilities/csv.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filePath.o: src/Utilities/filePath.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/messageBox.o: src/Utilities/messageBox.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/profiling.o: src/Utilities/profiling.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/random.o: src/Utilities/random.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/threadId.o: src/Utilities/threadId.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/threadPool.o: src/Utilities/threadPool.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xml.o: src/Utilities/xml.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dearImGui.o: src/dearImGui.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/game.o: src/game.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pch.o: src/pch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testAStarAlgorithm.o: tests/unitTests/AI/testAStarAlgorithm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testObstacleGrid.o: tests/unitTests/AI/testObstacleGrid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testRandomPathAlgorithm.o: tests/unitTests/AI/testRandomPathAlgorithm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testSoundPlayer.o: tests/unitTests/Audio/testSoundPlayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testSpatializationManager.o: tests/unitTests/Audio/testSpatializationManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testHandler.o: tests/unitTests/Logs/testHandler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testLogger.o: tests/unitTests/Logs/testLogger.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bufferedHandler.o: tests/unitTests/TestsUtilities/bufferedHandler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testMath.o: tests/unitTests/Utilities/testMath.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testPath.o: tests/unitTests/Utilities/testPath.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testRandom.o: tests/unitTests/Utilities/testRandom.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testRect.o: tests/unitTests/Utilities/testRect.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/testXml.o: tests/unitTests/Utilities/testXml.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: tests/unitTests/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif